Create a module that stores values of the ownership of assets of a parameterized # of people. At each operation we want to
calculate the individual 

Values to store for each individual's account:
    - Name (a numeric ID in order of entry. IE: user 1 = 000001, user 2 = 000002, etc.)
    - value of assets (ASSET_COUNT number of data entries)

Note: while ready is asserted, input signals should NOT change.

Signals from top module:
Parameters: USER_CAPACITY - # of available individual account slots
            ASSET_COUNT -  # of available number of assets to track

Inputs:
[0:ASSET_COUNT - 1] signals representing the prices of assets
[0:2] Operations the machine can operate in:
    - 00: compute and return number of assets user has
    - 01: create new user, output the number associated with this user
    - 11: add/subtract shares of asset to user
    - 10: return total value of assets of given user
start signal: assert in order to start process. will cause ready signal to go down

if operation is 11 use these signals:
name (in number ID)
value (16 bit value)

Outputs:
user ID output
    - if op is 00, this represents user ID of wealthiest user
    - if op is 01, this represents user ID of newly created user
total asset value output (should change only when Opcode is 00)
    - if op is 00
ready signal
error signal